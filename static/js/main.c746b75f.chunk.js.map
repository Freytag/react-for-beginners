{"version":3,"sources":["helpers.js","components/StorePicker.js","components/Header.js","components/Order.js","components/AddFishForm.js","components/EditFishForm.js","components/Login.js","base.js","components/Inventory.js","components/Fish.js","sample-fishes.js","components/App.js","components/NotFound.js","components/Router.js","index.js"],"names":["formatPrice","cents","toLocaleString","style","currency","rando","arr","Math","floor","random","length","getFunName","adjectives","concat","StorePicker","storeNameInput","React","createRef","handleSubmit","e","preventDefault","storeName","_this","current","value","props","history","push","react_default","a","createElement","className","onSubmit","this","ref","type","required","placeholder","defaultValue","Component","Header","tagline","Order","renderOrder","key","fish","fishes","count","order","isAvailable","status","transitionOptions","classNames","timeout","enter","exit","react_transition_group","component","name","onClick","deleteFromOrder","price","_this2","orderIds","Object","keys","total","reduce","t","map","AddFishForm","nameRef","priceRef","statusRef","descRef","imageRef","createFish","parseFloat","desc","image","addFish","EditFishForm","handleChange","updatedFish","objectSpread","defineProperty","currentTarget","updateFish","index","onChange","deleteFish","Login","authenticate","firebaseApp","firebase","initializeApp","apiKey","authDomain","databaseURL","base","Rebase","createClass","database","Inventory","state","user","owner","authHandler","_callee","authData","store","regenerator_default","wrap","_context","prev","next","console","log","fetch","storeId","context","assertThisInitialized","sent","post","data","uid","setState","stop","provider","authProvider","auth","signInWithPopup","then","logout","_callee2","_context2","signOut","onAuthStateChanged","_this3","components_EditFishForm","components_AddFishForm","loadSampleFishes","components_Login","Fish","_this$props$details","details","src","alt","disabled","addToOrder","fish1","fish2","fish3","fish4","fish5","fish6","fish7","fish8","fish9","App","sampleFishes","Date","now","params","match","storedOrder","localStorage","getItem","syncState","JSON","parse","setItem","stringify","removeBinding","components_Header","components_Fish","components_Order","components_Inventory","NotFound","Router","BrowserRouter","Switch","Route","exact","path","render","components_Router","document","querySelector"],"mappings":"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","file":"static/js/main.c746b75f.chunk.js","sourcesContent":["export function formatPrice(cents) {\n  return (cents / 100).toLocaleString(\"en-US\", {\n    style: \"currency\",\n    currency: \"USD\"\n  });\n}\n\nexport function rando(arr) {\n  return arr[Math.floor(Math.random() * arr.length)];\n}\n\nexport function slugify(text) {\n  return text\n    .toString()\n    .toLowerCase()\n    .replace(/\\s+/g, \"-\")\n    .replace(/[^\\w-]+/g, \"\")\n    .replace(/--+/g, \"-\")\n    .replace(/^-+/, \"\")\n    .replace(/-+$/, \"\");\n}\n\nexport function getFunName() {\n  const adjectives = [\n    \"adorable\",\n    \"beautiful\",\n    \"clean\",\n    \"drab\",\n    \"elegant\",\n    \"fancy\",\n    \"glamorous\",\n    \"handsome\",\n    \"long\",\n    \"magnificent\",\n    \"old-fashioned\",\n    \"plain\",\n    \"quaint\",\n    \"sparkling\",\n    \"ugliest\",\n    \"unsightly\",\n    \"angry\",\n    \"bewildered\",\n    \"clumsy\",\n    \"defeated\",\n    \"embarrassed\",\n    \"fierce\",\n    \"grumpy\",\n    \"helpless\",\n    \"itchy\",\n    \"jealous\",\n    \"lazy\",\n    \"mysterious\",\n    \"nervous\",\n    \"obnoxious\",\n    \"panicky\",\n    \"repulsive\",\n    \"scary\",\n    \"thoughtless\",\n    \"uptight\",\n    \"worried\"\n  ];\n\n  const nouns = [\n    \"women\",\n    \"men\",\n    \"children\",\n    \"teeth\",\n    \"feet\",\n    \"people\",\n    \"leaves\",\n    \"mice\",\n    \"geese\",\n    \"halves\",\n    \"knives\",\n    \"wives\",\n    \"lives\",\n    \"elves\",\n    \"loaves\",\n    \"potatoes\",\n    \"tomatoes\",\n    \"cacti\",\n    \"foci\",\n    \"fungi\",\n    \"nuclei\",\n    \"syllabuses\",\n    \"analyses\",\n    \"diagnoses\",\n    \"oases\",\n    \"theses\",\n    \"crises\",\n    \"phenomena\",\n    \"criteria\",\n    \"data\"\n  ];\n\n  return `${rando(adjectives)}-${rando(adjectives)}-${rando(nouns)}`;\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { getFunName } from '../helpers';\n\nclass StorePicker extends React.Component {\n  // ES6 Binding\n  // constructor() {\n  //   super();\n  //   this.handleSubmit = this.handleSubmit.bind(this);\n  // }\n\n  static propTypes = {\n    history: PropTypes.object\n  };\n\n  storeNameInput = React.createRef();\n\n  handleSubmit = e => {\n    // 1. Stop Form from Submitting\n    e.preventDefault();\n    // 2. get text from input\n    const storeName = this.storeNameInput.current.value;\n    // 3. Change the uri to /store/what-it-says\n    this.props.history.push(`/store/${storeName}`);\n  };\n\n  render() {\n    return (\n      <form className=\"store-selector\" onSubmit={this.handleSubmit}>\n        <h2>Please Enter A Store</h2>\n        <input ref={this.storeNameInput} type=\"text\" required placeholder=\"Store Name\" defaultValue={getFunName()} />\n        <button type=\"submit\">Visit Store →</button>\n      </form>\n    );\n  }\n}\n\nexport default StorePicker;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n// statless functional component\n\nconst Header = props => (\n  <header className=\"top\">\n    <h1>\n      Catch\n      <span className=\"ofThe\">\n        <span className=\"of\">of</span>\n        <span className=\"the\">the</span>\n      </span>\n      Day\n    </h1>\n    <h3 className=\"tagline\">\n      <span>{props.tagline}</span>\n    </h3>\n  </header>\n);\n\nHeader.propTypes = {\n  tagline: PropTypes.string.isRequired\n};\n\nexport default Header;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\nimport { formatPrice } from '../helpers';\n\nclass Order extends Component {\n  static propTypes = {\n    fishes: PropTypes.shape({\n      image: PropTypes.string,\n      name: PropTypes.string,\n      desc: PropTypes.string,\n      status: PropTypes.string,\n      price: PropTypes.number\n    }),\n    order: PropTypes.object,\n    deleteFromOrder: PropTypes.func\n  };\n\n  renderOrder = key => {\n    const fish = this.props.fishes[key];\n    if (!fish) return null;\n\n    const count = this.props.order[key];\n    const isAvailable = fish.status === 'available';\n    const transitionOptions = {\n      classNames: 'order',\n      key,\n      timeout: { enter: 500, exit: 250 }\n    };\n\n    if (!isAvailable) {\n      return (\n        <CSSTransition {...transitionOptions}>\n          <li key={key}>Sorry {fish ? fish.name : 'fish'} is nolonger available</li>\n        </CSSTransition>\n      );\n    }\n    return (\n      <CSSTransition {...transitionOptions}>\n        <li key={key}>\n          <span>\n            <TransitionGroup component=\"span\" className=\"count\">\n              <CSSTransition classNames=\"count\" key={count} timeout={{ enter: 500, exit: 500 }}>\n                <span>{count}</span>\n              </CSSTransition>\n            </TransitionGroup>\n            lbs {fish.name}\n            <button\n              onClick={() => {\n                this.props.deleteFromOrder(key);\n              }}\n            >\n              ×\n            </button>\n          </span>\n          <span className=\"price\">{formatPrice(count * fish.price)}</span>\n        </li>\n      </CSSTransition>\n    );\n  };\n\n  render() {\n    const orderIds = Object.keys(this.props.order);\n    const total = orderIds.reduce((t, key) => {\n      const fish = this.props.fishes[key];\n      const count = this.props.order[key];\n      const isAvailable = fish && fish.status === 'available';\n      if (isAvailable) {\n        return t + count * fish.price;\n      } else {\n        return t;\n      }\n    }, 0);\n    return (\n      <div className=\"order-wrap\">\n        <h2>Order</h2>\n        <TransitionGroup component=\"ul\" className=\"order\">\n          {orderIds.map(this.renderOrder)}\n        </TransitionGroup>\n        <div className=\"total\">\n          Total: <strong>{formatPrice(total)}</strong>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Order;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass AddFishForm extends Component {\n  nameRef = React.createRef();\n\n  priceRef = React.createRef();\n\n  statusRef = React.createRef();\n\n  descRef = React.createRef();\n\n  imageRef = React.createRef();\n\n  static propTypes = {\n    addFish: PropTypes.func\n  };\n\n  createFish = e => {\n    // 1.stop form from submitting\n    e.preventDefault();\n    // 2.Put infor into State\n    const fish = {\n      name: this.nameRef.current.value,\n      price: parseFloat(this.priceRef.current.value),\n      status: this.statusRef.current.value,\n      desc: this.descRef.current.value,\n      image: this.imageRef.current.value\n    };\n    this.props.addFish(fish);\n  };\n\n  render() {\n    return (\n      <form className=\"fish-edit\" onSubmit={this.createFish}>\n        <input name=\"name\" ref={this.nameRef} type=\"text\" placeholder=\"Name\" />\n        <input name=\"price\" ref={this.priceRef} type=\"text\" placeholder=\"Price\" />\n        <select name=\"status\" ref={this.statusRef}>\n          <option value=\"available\">Fresh</option>\n          <option value=\"unavailable\">Sold Out</option>\n        </select>\n        <textarea name=\"desc\" ref={this.descRef} placeholder=\"Desc\" />\n        <input name=\"image\" ref={this.imageRef} type=\"text\" placeholder=\"Image\" />\n        <button type=\"submit\">+ Add Fish</button>\n      </form>\n    );\n  }\n}\n\nexport default AddFishForm;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass EditFishForm extends Component {\n  static propTypes = {\n    fish: PropTypes.shape({\n      image: PropTypes.string,\n      name: PropTypes.string,\n      desc: PropTypes.string,\n      status: PropTypes.string,\n      price: PropTypes.number\n    }),\n    index: PropTypes.string,\n    updateFish: PropTypes.func\n  };\n\n  handleChange = e => {\n    //update fish in State\n    // 1.CopyFish\n    const updatedFish = { ...this.props.fish, [e.currentTarget.name]: e.currentTarget.value };\n    this.props.updateFish(this.props.index, updatedFish);\n  };\n\n  render() {\n    const fish = this.props.fish;\n    return (\n      <div className=\"fish-edit\">\n        <input name=\"name\" onChange={this.handleChange} value={fish.name} type=\"text\" placeholder=\"Name\" />\n        <input name=\"price\" onChange={this.handleChange} value={fish.price} type=\"text\" placeholder=\"Price\" />\n        <select name=\"status\" onChange={this.handleChange} value={fish.status}>\n          <option value=\"available\">Fresh</option>\n          <option value=\"unavailable\">Sold Out</option>\n        </select>\n        <textarea name=\"desc\" onChange={this.handleChange} value={fish.desc} placeholder=\"Desc\" />\n        <input name=\"image\" onChange={this.handleChange} value={fish.image} type=\"text\" placeholder=\"Image\" />\n        <button\n          onClick={() => {\n            this.props.deleteFish(this.props.index);\n          }}\n        >\n          Remove Fish\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default EditFishForm;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Login = props => (\n  <nav className=\"login\">\n    <h2>login</h2>\n    <p>Sign in to manage your store's inventory.</p>\n    <button className=\"github\" onClick={() => props.authenticate('Github')}>\n      Log in with Github\n    </button>\n    <button className=\"facebook\" onClick={() => props.authenticate('Facebook')}>\n      Log in with Facebook\n    </button>\n    {/* <button className=\"twitter\" onClick={() => props.authenticate('Twitter')}>\n      Log in with Twitter\n    </button> */}\n  </nav>\n);\n\nLogin.propTypes = {\n  authenticate: PropTypes.func.isRequired\n};\n\nexport default Login;\n","import Rebase from 're-base';\nimport firebase from 'firebase';\n\nconst firebaseApp = firebase.initializeApp({\n  apiKey: 'AIzaSyDCOxsqRWryyt9r452PCqkqHfJGqSJrhAY',\n  authDomain: 'catch-of-the-day-3c682.firebaseapp.com',\n  databaseURL: 'https://catch-of-the-day-3c682.firebaseio.com'\n});\n\nconst base = Rebase.createClass(firebase.database());\n\n//this is a named export\nexport { firebaseApp };\n\n//this is a default export\nexport default base;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport firebase from 'firebase';\nimport AddFishForm from './AddFishForm';\nimport EditFishForm from './EditFishForm';\nimport Login from './Login';\nimport base, { firebaseApp } from '../base';\n\nclass Inventory extends Component {\n  static propTypes = {\n    fishes: PropTypes.shape({\n      image: PropTypes.string,\n      name: PropTypes.string,\n      desc: PropTypes.string,\n      status: PropTypes.string,\n      price: PropTypes.number\n    }).isRequired,\n    loadSampleFishes: PropTypes.func.isRequired,\n    updateFish: PropTypes.func.isRequired,\n    deleteFish: PropTypes.func.isRequired,\n    storeId: PropTypes.string.isRequired\n  };\n\n  state = {\n    user: null,\n    owner: null\n  };\n\n  componentDidMount() {\n    firebase.auth().onAuthStateChanged(user => {\n      if (user) {\n        this.authHandler({ user });\n      }\n    });\n  }\n\n  authHandler = async authData => {\n    console.log(authData);\n    // 1. look up current store in firebase database\n    const store = await base.fetch(this.props.storeId, { context: this });\n    console.log(store);\n    // 2. clai it if there is no owner\n    if (!store.owner) {\n      await base.post(`${this.props.storeId}/owner`, { data: authData.user.uid });\n    }\n    // 3. set the state of the current inventory component to reflect current user\n    this.setState({\n      uid: authData.user.uid,\n      owner: store.owner || authData.user.uid\n    });\n  };\n\n  authenticate = provider => {\n    const authProvider = new firebase.auth[`${provider}AuthProvider`]();\n    console.log(provider);\n    firebaseApp\n      .auth()\n      .signInWithPopup(authProvider)\n      .then(this.authHandler);\n  };\n\n  logout = async () => {\n    await firebase.auth().signOut();\n    this.setState({ uid: null });\n  };\n\n  render() {\n    const logout = <button onClick={this.logout}>logout</button>;\n    // 1. check if user is logged in\n    if (!this.state.uid) {\n      return <Login authenticate={this.authenticate} />;\n    }\n\n    // 2.check if user is not owner of store\n    if (this.state.uid !== this.state.owner) {\n      return <div>You are not the Owner {logout}</div>;\n    }\n\n    // 3. must be owner so display invbentory\n    return (\n      <div className=\"inventory\">\n        <h2>Inventory</h2>\n        {logout}\n        {Object.keys(this.props.fishes).map(key => (\n          <EditFishForm\n            key={key}\n            index={key}\n            fish={this.props.fishes[key]}\n            updateFish={this.props.updateFish}\n            deleteFish={this.props.deleteFish}\n          />\n        ))}\n        <AddFishForm addFish={this.props.addFish} />\n        <button onClick={this.props.loadSampleFishes}>Load Sample Fishes</button>\n      </div>\n    );\n  }\n}\n\nexport default Inventory;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { formatPrice } from '../helpers';\n\nclass Fish extends Component {\n  static propTypes = {\n    details: PropTypes.shape({\n      image: PropTypes.string,\n      name: PropTypes.string,\n      desc: PropTypes.string,\n      status: PropTypes.string,\n      price: PropTypes.number\n    }),\n    addToOrder: PropTypes.func\n  };\n  render() {\n    const { image, name, price, desc, status } = this.props.details;\n    const isAvailable = status === 'available';\n    return (\n      <li className=\"menu-fish\">\n        <img src={image} alt={name} />\n        <h3 className=\"fish-name\">\n          {name}\n          <span>{formatPrice(price)}</span>\n        </h3>\n\n        <p>{desc}</p>\n        <button\n          disabled={!isAvailable}\n          onClick={() => {\n            this.props.addToOrder(this.props.index);\n          }}\n        >\n          {isAvailable ? `Add to Cart` : `Sold Out`}\n        </button>\n      </li>\n    );\n  }\n}\n\nexport default Fish;\n","// This is just some sample data so you don't have to think of your own!\nconst fishes = {\n  fish1: {\n    name: \"Pacific Halibut\",\n    image: \"/images/hali.jpg\",\n    desc:\n      \"Everyone’s favorite white fish. We will cut it to the size you need and ship it.\",\n    price: 1724,\n    status: \"available\"\n  },\n\n  fish2: {\n    name: \"Lobster\",\n    image: \"/images/lobster.jpg\",\n    desc:\n      \"These tender, mouth-watering beauties are a fantastic hit at any dinner party.\",\n    price: 3200,\n    status: \"available\"\n  },\n\n  fish3: {\n    name: \"Sea Scallops\",\n    image: \"/images/scallops.jpg\",\n    desc:\n      \"Big, sweet and tender. True dry-pack scallops from the icey waters of Alaska. About 8-10 per pound\",\n    price: 1684,\n    status: \"unavailable\"\n  },\n\n  fish4: {\n    name: \"Mahi Mahi\",\n    image: \"/images/mahi.jpg\",\n    desc:\n      \"Lean flesh with a mild, sweet flavor profile, moderately firm texture and large, moist flakes. \",\n    price: 1129,\n    status: \"available\"\n  },\n\n  fish5: {\n    name: \"King Crab\",\n    image: \"/images/crab.jpg\",\n    desc:\n      \"Crack these open and enjoy them plain or with one of our cocktail sauces\",\n    price: 4234,\n    status: \"available\"\n  },\n\n  fish6: {\n    name: \"Atlantic Salmon\",\n    image: \"/images/salmon.jpg\",\n    desc:\n      \"This flaky, oily salmon is truly the king of the sea. Bake it, grill it, broil it...as good as it gets!\",\n    price: 1453,\n    status: \"available\"\n  },\n\n  fish7: {\n    name: \"Oysters\",\n    image: \"/images/oysters.jpg\",\n    desc: \"A soft plump oyster with a sweet salty flavor and a clean finish.\",\n    price: 2543,\n    status: \"available\"\n  },\n\n  fish8: {\n    name: \"Mussels\",\n    image: \"/images/mussels.jpg\",\n    desc:\n      \"The best mussels from the Pacific Northwest with a full-flavored and complex taste.\",\n    price: 425,\n    status: \"available\"\n  },\n\n  fish9: {\n    name: \"Jumbo Prawns\",\n    image: \"/images/prawns.jpg\",\n    desc:\n      \"With 21-25 two bite prawns in each pound, these sweet morsels are perfect for shish-kabobs.\",\n    price: 2250,\n    status: \"available\"\n  }\n};\n\nexport default fishes;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Header from './Header';\nimport Order from './Order';\nimport Inventory from './Inventory';\nimport Fish from './Fish';\nimport sampleFishes from '../sample-fishes';\nimport base from '../base';\n\nclass App extends Component {\n  state = {\n    fishes: {},\n    order: {}\n  };\n\n  static propTypes = {\n    match: PropTypes.object\n  };\n\n  componentDidMount() {\n    //sync base\n    const { params } = this.props.match;\n    const storedOrder = localStorage.getItem(params.storeId);\n    this.ref = base.syncState(`${params.storeId}/fishes`, {\n      context: this,\n      state: 'fishes'\n    });\n    if (storedOrder) {\n      this.setState({ order: JSON.parse(storedOrder) });\n    }\n  }\n\n  componentDidUpdate() {\n    localStorage.setItem(this.props.match.params.storeId, JSON.stringify(this.state.order));\n  }\n\n  componentWillUnmount() {\n    //unmount\n    base.removeBinding(this.ref);\n  }\n\n  loadSampleFishes = () => {\n    this.setState({ fishes: sampleFishes });\n  };\n\n  addFish = fish => {\n    // 1. copy existing state;\n    const fishes = { ...this.state.fishes };\n    // 2. add new fish to existing state\n    fishes[`fish_${Date.now()}`] = fish;\n    // 3. set new state;\n    this.setState({\n      fishes\n    });\n  };\n\n  updateFish = (key, updatedFish) => {\n    // 1. copy current state;\n    const fishes = { ...this.state.fishes };\n    // 2. update state\n    fishes[key] = updatedFish;\n    // 3. set new state;\n    this.setState({\n      fishes\n    });\n  };\n\n  deleteFish = key => {\n    // 1. copy current state;\n    const fishes = { ...this.state.fishes };\n    // 2. update state (remove item)\n    fishes[key] = null;\n    // 3. set new state;\n    this.setState({\n      fishes\n    });\n  };\n\n  addToOrder = key => {\n    // 1. copy existing state;\n    const order = { ...this.state.order };\n    // 2. add new key yo or or update exitising item;\n    order[key] = order[key] + 1 || 1;\n    // 3. set new state;\n    this.setState({\n      order\n    });\n  };\n\n  deleteFromOrder = key => {\n    // 1. copy existing state;\n    const order = { ...this.state.order };\n    // 2. remove item from Order;\n    delete order[key];\n    // 3. set new state;\n    this.setState({\n      order\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"catch-of-the-day\">\n        <div className=\"menu\">\n          <Header tagline=\"Fresh Seafood Market\" />\n          <ul>\n            {Object.keys(this.state.fishes).map(key => (\n              <Fish key={key} index={key} details={this.state.fishes[key]} addToOrder={this.addToOrder} />\n            ))}\n          </ul>\n        </div>\n        <Order fishes={this.state.fishes} order={this.state.order} deleteFromOrder={this.deleteFromOrder} />\n        <Inventory\n          storeId={this.props.match.params.storeId}\n          addFish={this.addFish}\n          updateFish={this.updateFish}\n          deleteFish={this.deleteFish}\n          loadSampleFishes={this.loadSampleFishes}\n          fishes={this.state.fishes}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\n\nconst NotFound = () => <div className=\"notfound\">NotFound</div>;\n\nexport default NotFound;\n","import React from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport StorePicker from './StorePicker';\nimport App from './App';\nimport NotFound from './NotFound';\n\nconst Router = () => (\n  <BrowserRouter>\n    <Switch>\n      <Route exact path=\"/\" component={StorePicker} />\n      <Route path=\"/store/:storeId\" component={App} />\n      <Route component={NotFound} />\n    </Switch>\n  </BrowserRouter>\n);\n\nexport default Router;\n","import React from 'react';\nimport {render} from 'react-dom';\nimport Router from './components/Router';\nimport \"./css/style.css\";\n\nrender(<Router/>, document.querySelector('#main'));\n\n"],"sourceRoot":""}